{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"src/app/modules/book/services/register.service\";\nimport * as i3 from \"../register-base-header-modal/register-base-header-modal.component\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = [\"aboutStudent\"];\nexport let StudentSpeechRecordModalComponent = /*#__PURE__*/(() => {\n  class StudentSpeechRecordModalComponent {\n    constructor(ngbActiveModal, ngbModal, registerService) {\n      this.ngbActiveModal = ngbActiveModal;\n      this.ngbModal = ngbModal;\n      this.registerService = registerService;\n    }\n\n    ngOnInit() {\n      this.form = new FormGroup({\n        about: new FormControl('', Validators.compose([Validators.required, Validators.maxLength(64)])),\n        name: new FormControl('', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(24)]))\n      });\n    }\n\n    ngAfterViewInit() {\n      this.textarea.nativeElement.focus();\n    }\n\n    handleCloseModal() {\n      this.ngbActiveModal.close();\n    }\n\n    handleFinishStudentSpeechRecordRegister() {\n      const {\n        selectedRegisterFieldId: fieldId\n      } = this.registerService.snapshot;\n      const {\n        about,\n        name\n      } = this.form.value;\n      this.registerService.setFieldValue(fieldId, {\n        type: 'text',\n        value: {\n          about,\n          name\n        }\n      });\n      this.ngbModal.dismissAll();\n    }\n\n  }\n\n  StudentSpeechRecordModalComponent.ɵfac = function StudentSpeechRecordModalComponent_Factory(t) {\n    return new (t || StudentSpeechRecordModalComponent)(i0.ɵɵdirectiveInject(i1.NgbActiveModal), i0.ɵɵdirectiveInject(i1.NgbModal), i0.ɵɵdirectiveInject(i2.RegisterService));\n  };\n\n  StudentSpeechRecordModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StudentSpeechRecordModalComponent,\n    selectors: [[\"liv-student-speech-record-modal\"]],\n    viewQuery: function StudentSpeechRecordModalComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textarea = _t.first);\n      }\n    },\n    decls: 8,\n    vars: 2,\n    consts: [[1, \"student-speech-record-modal-container\"], [\"title\", \"Fala do aluno\", 3, \"close\"], [1, \"student-speech-record-modal-form\", 3, \"formGroup\", \"submit\"], [\"placeholder\", \"Escreva aqui uma frase do seu aluno.\", \"formControlName\", \"about\", \"maxlength\", \"64\"], [\"aboutStudent\", \"\"], [\"type\", \"text\", \"placeholder\", \"Nome do aluno\", \"formControlName\", \"name\", \"maxlength\", \"24\"], [\"type\", \"submit\", 3, \"disabled\"]],\n    template: function StudentSpeechRecordModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"liv-register-base-header-modal\", 1);\n        i0.ɵɵlistener(\"close\", function StudentSpeechRecordModalComponent_Template_liv_register_base_header_modal_close_1_listener() {\n          return ctx.handleCloseModal();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 2);\n        i0.ɵɵlistener(\"submit\", function StudentSpeechRecordModalComponent_Template_form_submit_2_listener() {\n          return ctx.handleFinishStudentSpeechRecordRegister();\n        });\n        i0.ɵɵelement(3, \"textarea\", 3, 4)(5, \"input\", 5);\n        i0.ɵɵelementStart(6, \"button\", 6);\n        i0.ɵɵtext(7, \"Concluir\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n      }\n    },\n    directives: [i3.RegisterBaseHeaderModalComponent, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlName, i4.MaxLengthValidator],\n    styles: [\".student-speech-record-modal-container[_ngcontent-%COMP%]{max-width:33rem;min-height:14.0625rem;padding:1.5rem}.student-speech-record-modal-form[_ngcontent-%COMP%]{margin-top:1.5rem;display:flex;flex-direction:column;gap:1.5rem}.student-speech-record-modal-form[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]{resize:none;width:100%;height:5.875rem;padding:.75rem 1rem;border-radius:.25rem;border:1px solid #e0e2e9;font-family:Roboto,sans-serif;font-weight:400;font-style:normal;font-size:.875rem;line-height:1.2;color:#2d2a34}@media (min-width: 768px){.student-speech-record-modal-form[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]{font-size:1rem}}.student-speech-record-modal-form[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]::placeholder{color:#c9cbd4}.student-speech-record-modal-form[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%]{width:100%;height:3.5rem;padding:.75rem 1rem;border-radius:.25rem;border:1px solid #e0e2e9;font-family:Roboto,sans-serif;font-weight:400;font-style:normal;font-size:.875rem;line-height:1.2;color:#2d2a34}@media (min-width: 768px){.student-speech-record-modal-form[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%]{font-size:1rem}}.student-speech-record-modal-form[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%]::placeholder{color:#c9cbd4}.student-speech-record-modal-form[_ngcontent-%COMP%]   button[type=submit][_ngcontent-%COMP%]{border:0;padding:1rem 1.5rem;color:#fff;width:100%;height:3.5rem;display:flex;align-items:center;justify-content:center;text-align:center;font-weight:600;border-radius:9999px;background-color:#4c338a;transition:.2s ease}.student-speech-record-modal-form[_ngcontent-%COMP%]   button[type=submit][_ngcontent-%COMP%]:not(:disabled):hover{background-color:#4c338a}\"]\n  });\n  return StudentSpeechRecordModalComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}