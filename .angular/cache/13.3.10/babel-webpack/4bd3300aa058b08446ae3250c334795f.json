{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\PROJETOS\\\\ELEVA\\\\liv-portfolio-front\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nexport class FileService {\n  base64Encode(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = () => resolve(reader.result);\n\n      reader.onerror = e => reject(e);\n    });\n  }\n\n  base64Decode(base64) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const response = yield fetch(base64);\n      const blob = yield response.blob();\n      const url = yield _this.base64Encode(blob);\n      return url ? url.toString() : null;\n    })();\n  }\n\n}\n\nFileService.ɵfac = function FileService_Factory(t) {\n  return new (t || FileService)();\n};\n\nFileService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FileService,\n  factory: FileService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/PROJETOS/ELEVA/liv-portfolio-front/src/app/shared/utils/services/file/file.service.ts"],"names":["i0","FileService","base64Encode","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","e","base64Decode","base64","response","fetch","blob","url","toString","ɵfac","FileService_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,MAAMC,WAAN,CAAkB;AACrBC,EAAAA,YAAY,CAACC,IAAD,EAAO;AACf,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,YAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,MAAAA,MAAM,CAACE,aAAP,CAAqBN,IAArB;;AACAI,MAAAA,MAAM,CAACG,MAAP,GAAgB,MAAML,OAAO,CAACE,MAAM,CAACI,MAAR,CAA7B;;AACAJ,MAAAA,MAAM,CAACK,OAAP,GAAiBC,CAAC,IAAIP,MAAM,CAACO,CAAD,CAA5B;AACH,KALM,CAAP;AAMH;;AACKC,EAAAA,YAAY,CAACC,MAAD,EAAS;AAAA;;AAAA;AACvB,YAAMC,QAAQ,SAASC,KAAK,CAACF,MAAD,CAA5B;AACA,YAAMG,IAAI,SAASF,QAAQ,CAACE,IAAT,EAAnB;AACA,YAAMC,GAAG,SAAS,KAAI,CAACjB,YAAL,CAAkBgB,IAAlB,CAAlB;AACA,aAAOC,GAAG,GAAGA,GAAG,CAACC,QAAJ,EAAH,GAAoB,IAA9B;AAJuB;AAK1B;;AAdoB;;AAgBzBnB,WAAW,CAACoB,IAAZ,GAAmB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAE,SAAO,KAAKA,CAAC,IAAItB,WAAV,GAAP;AAAkC,CAAvF;;AACAA,WAAW,CAACuB,KAAZ,GAAoB,aAAcxB,EAAE,CAACyB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEzB,WAAT;AAAsB0B,EAAAA,OAAO,EAAE1B,WAAW,CAACoB,IAA3C;AAAiDO,EAAAA,UAAU,EAAE;AAA7D,CAAtB,CAAlC","sourcesContent":["import * as i0 from \"@angular/core\";\r\nexport class FileService {\r\n    base64Encode(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = e => reject(e);\r\n        });\r\n    }\r\n    async base64Decode(base64) {\r\n        const response = await fetch(base64);\r\n        const blob = await response.blob();\r\n        const url = await this.base64Encode(blob);\r\n        return url ? url.toString() : null;\r\n    }\r\n}\r\nFileService.ɵfac = function FileService_Factory(t) { return new (t || FileService)(); };\r\nFileService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: FileService, factory: FileService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}