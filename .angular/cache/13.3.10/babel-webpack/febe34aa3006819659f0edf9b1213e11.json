{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\PROJETOS\\\\ELEVA\\\\liv-portfolio-front\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { filter, fromEvent, map, Subject, takeUntil } from 'rxjs';\nimport { StudentSpeechRecordModalComponent } from '../student-speech-record-modal/student-speech-record-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"../../../../services/register.service\";\nimport * as i3 from \"src/app/shared/utils/services/file/file.service\";\nimport * as i4 from \"../register-base-header-modal/register-base-header-modal.component\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"angular-svg-icon\";\nconst _c0 = [\"fileInput\"];\n\nconst _c1 = function () {\n  return {\n    \"width.px\": 26,\n    fill: \"#007BE5\"\n  };\n};\n\nfunction RegisterSelectModalComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵlistener(\"click\", function RegisterSelectModalComponent_div_3_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const action_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.handleActionIcon(action_r2);\n    });\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵelement(2, \"svg-icon\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 9);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const action_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", \"assets/icons/\" + action_r2.icon + \".svg\")(\"svgStyle\", i0.ɵɵpureFunction0(3, _c1));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", action_r2.name, \"\");\n  }\n}\n\nexport let RegisterSelectModalComponent = /*#__PURE__*/(() => {\n  class RegisterSelectModalComponent {\n    constructor(ngbActiveModal, ngbModal, registerService, fileService) {\n      this.ngbActiveModal = ngbActiveModal;\n      this.ngbModal = ngbModal;\n      this.registerService = registerService;\n      this.fileService = fileService;\n      this.registerActions = [{\n        icon: 'gallery',\n        type: 'image',\n        name: 'Imagem'\n      }, {\n        icon: 'typography',\n        type: 'text',\n        name: 'Fala do aluno'\n      }, {\n        icon: 'video-camera',\n        type: 'video',\n        name: 'Vídeo'\n      }, {\n        icon: 'microphone',\n        type: 'audio',\n        name: 'Áudio do aluno'\n      }];\n      this.destroy$ = new Subject();\n    }\n\n    ngAfterViewInit() {\n      this.listenerInputChangeEvent();\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n    }\n\n    listenerInputChangeEvent() {\n      var _this = this;\n\n      fromEvent(this.fileInput.nativeElement, 'change').pipe(takeUntil(this.destroy$), filter(event => !!event.target.files && !!this.registerService.snapshot.selectedRegisterFieldId), map(({\n        target\n      }) => ({\n        type: this.selectedInputType,\n        file: target.files[0],\n        id: this.registerService.snapshot.selectedRegisterFieldId\n      }))).subscribe( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* ({\n          type,\n          file,\n          id\n        }) {\n          const base64 = yield _this.fileService.base64Encode(file);\n\n          switch (type) {\n            case 'image':\n              _this.registerService.setFieldValue(id, {\n                type: 'image',\n                value: {\n                  src: base64,\n                  alt: ''\n                }\n              });\n\n              break;\n\n            case 'video':\n              _this.registerService.setFieldValue(id, {\n                type: 'video',\n                value: {\n                  src: '',\n                  type: 'video/mp4'\n                }\n              });\n\n              break;\n\n            case 'audio':\n              _this.registerService.setFieldValue(id, {\n                type: 'audio',\n                value: {\n                  src: '',\n                  type: 'audio/mp3'\n                }\n              });\n\n              break;\n\n            default:\n              return;\n          }\n\n          delete _this.fileInput.nativeElement.files;\n\n          _this.registerService.resetSelectedRegisterField();\n\n          _this.ngbActiveModal.close();\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n\n    handleCloseModal() {\n      this.registerService.resetSelectedRegisterField();\n      this.ngbActiveModal.close();\n    }\n\n    handleActionIcon(action) {\n      this.selectedInputType = action.type;\n\n      switch (action.type) {\n        case 'text':\n          this.ngbModal.open(StudentSpeechRecordModalComponent, {\n            centered: true,\n            modalDialogClass: 'register-select-modal'\n          });\n          action;\n          break;\n\n        case 'image':\n          {\n            this.fileInput.nativeElement.accept = 'image/png, image/gif, image/jpeg';\n            this.fileInput.nativeElement.click();\n          }\n          break;\n\n        case 'video':\n          {\n            this.fileInput.nativeElement.accept = 'video/*';\n            this.fileInput.nativeElement.click();\n          }\n          break;\n\n        case 'audio':\n          {\n            this.fileInput.nativeElement.accept = 'audio/*';\n            this.fileInput.nativeElement.click();\n          }\n          break;\n\n        default:\n          return;\n      }\n    }\n\n  }\n\n  RegisterSelectModalComponent.ɵfac = function RegisterSelectModalComponent_Factory(t) {\n    return new (t || RegisterSelectModalComponent)(i0.ɵɵdirectiveInject(i1.NgbActiveModal), i0.ɵɵdirectiveInject(i1.NgbModal), i0.ɵɵdirectiveInject(i2.RegisterService), i0.ɵɵdirectiveInject(i3.FileService));\n  };\n\n  RegisterSelectModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterSelectModalComponent,\n    selectors: [[\"liv-register-select-modal\"]],\n    viewQuery: function RegisterSelectModalComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);\n      }\n    },\n    decls: 6,\n    vars: 1,\n    consts: [[1, \"register-modal-container\"], [\"title\", \"Escolha o tipo de registro\", 3, \"close\"], [1, \"register-modal-content\"], [\"class\", \"register-action-icon\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"hidden\", \"\", \"type\", \"file\"], [\"fileInput\", \"\"], [1, \"register-action-icon\", 3, \"click\"], [1, \"register-action-icon__content\"], [3, \"src\", \"svgStyle\"], [1, \"register-modal-content__actionName\"]],\n    template: function RegisterSelectModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"liv-register-base-header-modal\", 1);\n        i0.ɵɵlistener(\"close\", function RegisterSelectModalComponent_Template_liv_register_base_header_modal_close_1_listener() {\n          return ctx.handleCloseModal();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"section\", 2);\n        i0.ɵɵtemplate(3, RegisterSelectModalComponent_div_3_Template, 5, 4, \"div\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(4, \"input\", 4, 5);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.registerActions);\n      }\n    },\n    directives: [i4.RegisterBaseHeaderModalComponent, i5.NgForOf, i6.SvgIconComponent],\n    styles: [\".register-modal-container[_ngcontent-%COMP%]{max-width:33rem;min-height:14.0625rem;padding:1.5rem}.register-modal-content[_ngcontent-%COMP%]{width:100%;display:inline-grid;place-content:center;grid-template-columns:repeat(auto-fit,5.5rem);gap:2rem;margin-top:1.5rem}@media (min-width: 480px){.register-modal-content[_ngcontent-%COMP%]{gap:2.625rem}}.register-modal-content__actionName[_ngcontent-%COMP%]{font-family:Roboto,sans-serif;font-weight:400;font-style:normal;font-size:.75rem;line-height:1.2;color:#2d2a34;margin-top:.5rem;text-align:center}@media (min-width: 768px){.register-modal-content__actionName[_ngcontent-%COMP%]{font-size:.75rem}}.register-action-icon[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center}.register-action-icon__content[_ngcontent-%COMP%]{border-radius:9999px;background-color:#d4e8ff;width:4rem;height:4rem;cursor:pointer;display:flex;align-items:center;justify-content:center;transition:.2s ease}.register-action-icon__content[_ngcontent-%COMP%]:hover{box-shadow:0 0 0 2px #4f88c7}\"]\n  });\n  return RegisterSelectModalComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}